xlab("")+ylab("")+theme_classic()+
theme(legend.position = "right",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) -> lftAnno
cl_plot(cl,
annotation=cl_annotation(top = topAnn,top.by = "Mir",top.height = 0.5,
bottom = botAnn,bottom.by = "Gene",bottom.height = 0.5,
right = rgtAnn,right.by ="Meth",right.width = 0.5,
left = lftAnno,left.by = "Drug" ,left.width = 0.5),
cross = list( mapping = aes(color = type,size=degree,shape=type),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)]),
shape = scale_shape_manual(values = 15:23),
size  = scale_size_continuous(range=c(1,5)))),
link  = list(mapping = aes(color = type,linetype=type,size=cor),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")[c(1:5,7:9)]),
linetype=scale_linetype_manual(values = c(1:4)),
size=scale_size(range = c(0.5,1.5)))),
header=NA,
label = list(color="black"
,angle=c(rep(0,8),rep(90,10),rep(0,10),rep(90,6))
,nudge_x=c(rep(-2,8),rep(0,10),rep(2,10),rep(0,6))
,nudge_y=c(rep(0,8),rep(-2,10),rep(0,10),rep(2,6))),
add   =  theme(panel.background = element_blank(),axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:6)),levels=paste0("F",c(6:1))),value=c(6:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="F"))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:6)),levels=paste0("F",c(6:1))),value=c(6:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
rgtAnn
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="F"))
cl %>% cl_plot()
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="F"))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:6)),levels=paste0("F",c(6:1))),value=c(6:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
rgtAnn
cl %>% cl_plot()
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="F"))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:6)),levels=paste0("F",c(6:1))),value=c(6:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
rgtAnn
cl %>% cl_plot()
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="Mir"))
get_cross()
get_cross(cl)
get_header(cl)
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="Mir"))
cl %>% cl_plot()
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:9)),levels=paste0("F",c(9:1))),value=c(9:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
rgtAnn
cl %>% cl_plot()
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="Mir"))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:10)),levels=paste0("F",c(10:1))),value=c(10:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
rgtAnn
cl %>% cl_plot()
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="Mir"))
get_cross(cl)
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="Meth"))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:10)),levels=paste0("F",c(10:1))),value=c(10:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
rgtAnn
cl %>% cl_plot()
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="Meth"))
cl_plot(cl,
annotation=cl_annotation(
bottom = botAnn,bottom.by = "Gene",bottom.height = 0.5,
right = rgtAnn,right.by ="Meth",right.width = 0.5,
left = lftAnno,left.by = "Drug" ,left.width = 0.5),
cross = list( mapping = aes(color = type,size=degree,shape=type),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)]),
shape = scale_shape_manual(values = 15:23),
size  = scale_size_continuous(range=c(1,5)))),
link  = list(mapping = aes(color = type,linetype=type,size=cor),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")[c(1:5,7:9)]),
linetype=scale_linetype_manual(values = c(1:4)),
size=scale_size(range = c(0.5,1.5)))),
header=NA,
label = list(color="black"
,angle=c(rep(0,8),rep(90,10),rep(0,10),rep(90,6))
,nudge_x=c(rep(-2,8),rep(0,10),rep(2,10),rep(0,6))
,nudge_y=c(rep(0,8),rep(-2,10),rep(0,10),rep(2,6))),
add   =  theme(panel.background = element_blank(),axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()))
cl_plot(cl,
annotation=cl_annotation(top = topAnn,top.by = "Mir",top.height = 0.5,
bottom = botAnn,bottom.by = "Gene",bottom.height = 0.5,
right = rgtAnn,right.by ="Meth",right.width = 0.5,
left = lftAnno,left.by = "Drug" ,left.width = 0.5),
cross = list( mapping = aes(color = type,size=degree,shape=type),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)]),
shape = scale_shape_manual(values = 15:23),
size  = scale_size_continuous(range=c(1,5)))),
link  = list(mapping = aes(color = type,linetype=type,size=cor),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")[c(1:5,7:9)]),
linetype=scale_linetype_manual(values = c(1:4)),
size=scale_size(range = c(0.5,1.5)))),
header=NA,
label = list(color="black"
,angle=c(rep(0,8),rep(90,10),rep(0,10),rep(90,6))
,nudge_x=c(rep(-2,8),rep(0,10),rep(2,10),rep(0,6))
,nudge_y=c(rep(0,8),rep(-2,10),rep(0,10),rep(2,6))),
add   =  theme(panel.background = element_blank(),axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()))
library(dplyr)
library(reshape)
theme_classic() +
theme(axis.text = element_blank(),
axis.line.x = element_blank(),
axis.ticks.x = element_blank()) ->theme_use2
## crosslink project
cl <- crosslink(example$nodes,example$edges,cross.by="type")
cl %>% cl_plot()
cl <- set_header(cl,header=unique(get_cross(cl)$cross))
cl %>% layout_polygon(crosses = c("Mir","Meth","Gene","Drug"),layout_based = "default") %>%
tf_rotate(crosses= c("Mir","Meth","Gene","Drug"),angle = rep(45,4),layout="default") %>%
tf_shift(x=0.2*(-1),y=1.5,crosses=c("Mir","Meth"),layout="default") -> cl
# plot annotation
top <- nodes$id[nodes$type == "Mir"] # set the order as you like
bottom <- nodes$id[nodes$type == "Gene"] # set the order as you like
right <- nodes$id[nodes$type == "Meth"] # set the order as you like
# Top plot
topAnn <-  mirData %>%
mutate(mir_f = factor(mir, top)) %>%
ggplot(mapping = aes(x=mir,y=-lfc)) +
geom_bar(fill = "#E7298A",
stat = "identity",
width = 0.5) + # 间距跟bar同宽
labs(x = NULL, y = "log2(Fold Change)") +
theme_use2
topAnn
# Bottom plot
botAnn <- geneData %>%
mutate(meth_f = factor(gene, bottom)) %>%
ggplot(mapping = aes(x=gene,y=-lfc)) +
geom_bar(fill =  RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)][2],
stat = "identity",
width = 0.5) +
labs(x = NULL, y = "Difference") +
theme_use2
botAnn
# right plot
rgtAnn <- methData %>%
mutate(mir_f = factor(meth, right)) %>%
ggplot(mapping = aes(x=meth,y=-lfc)) +
geom_bar(fill = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)][3],
stat = "identity",
width = 0.5) +
labs(x = NULL, y = "log2(Fold Change)") +
theme_use2 +
coord_flip()
rgtAnn
# left plot
mat = matrix(sample(1:100, 64, replace = T), nrow = 8)
colnames(mat)=as.character(cl@cross$Drug)
ggplot(data = melt(mat), aes(X1, X2, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "darkgreen", mid = "white",midpoint = 0) +
xlab("")+ylab("")+theme_classic()+
theme(legend.position = "right",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) -> lftAnno
cl_plot(cl,
annotation=cl_annotation(top = topAnn,top.by = "Mir",top.height = 0.5,
bottom = botAnn,bottom.by = "Gene",bottom.height = 0.5,
right = rgtAnn,right.by ="Meth",right.width = 0.5,
left = lftAnno,left.by = "Drug" ,left.width = 0.5),
cross = list( mapping = aes(color = type,size=degree,shape=type),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)]),
shape = scale_shape_manual(values = 15:23),
size  = scale_size_continuous(range=c(1,5)))),
link  = list(mapping = aes(color = type,linetype=type,size=cor),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")[c(1:5,7:9)]),
linetype=scale_linetype_manual(values = c(1:4)),
size=scale_size(range = c(0.5,1.5)))),
header=NA,
label = list(color="black"
,angle=c(rep(0,8),rep(90,10),rep(0,10),rep(90,6))
,nudge_x=c(rep(-2,8),rep(0,10),rep(2,10),rep(0,6))
,nudge_y=c(rep(0,8),rep(-2,10),rep(0,10),rep(2,6))),
add   =  theme(panel.background = element_blank(),axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()))
library(dplyr)
library(reshape)
theme_classic() +
theme(axis.text = element_blank(),
axis.line.x = element_blank(),
axis.ticks.x = element_blank()) ->theme_use2
## crosslink project
cl <- crosslink(example$nodes,example$edges,cross.by="type")
cl %>% cl_plot()
cl <- set_header(cl,header=unique(get_cross(cl)$cross))
cl %>% layout_polygon(crosses = c("Mir","Meth","Gene","Drug"),layout_based = "default") %>%
tf_rotate(crosses= c("Mir","Meth","Gene","Drug"),angle = rep(45,4),layout="default") %>%
tf_shift(x=0.2*(-1),y=1.5,crosses=c("Mir","Meth"),layout="default") -> cl
# plot annotation
top <- nodes$id[nodes$type == "Mir"] # set the order as you like
bottom <- nodes$id[nodes$type == "Gene"] # set the order as you like
right <- nodes$id[nodes$type == "Meth"] # set the order as you like
# Top plot
topAnn <-  mirData %>%
mutate(mir_f = factor(mir, top)) %>%
ggplot(mapping = aes(x=mir,y=-lfc)) +
geom_bar(fill = "#E7298A",
stat = "identity",
width = 0.5) + # 间距跟bar同宽
labs(x = NULL, y = "log2(Fold Change)") +
theme_use2
topAnn
# Bottom plot
botAnn <- geneData %>%
mutate(meth_f = factor(gene, bottom)) %>%
ggplot(mapping = aes(x=gene,y=-lfc)) +
geom_bar(fill =  RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)][2],
stat = "identity",
width = 0.5) +
labs(x = NULL, y = "Difference") +
theme_use2
botAnn
# right plot
rgtAnn <- methData %>%
mutate(mir_f = factor(meth, right)) %>%
ggplot(mapping = aes(x=meth,y=-lfc)) +
geom_bar(fill = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)][3],
stat = "identity",
width = 0.5) +
labs(x = NULL, y = "log2(Fold Change)") +
theme_use2 +
coord_flip()
rgtAnn
# left plot
mat = matrix(sample(1:100, 64, replace = T), nrow = 8)
colnames(mat)=as.character(cl@cross$Drug)
ggplot(data = melt(mat), aes(X1, X2, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "darkgreen", mid = "white",midpoint = 0) +
xlab("")+ylab("")+theme_classic()+
theme(legend.position = "right",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) -> lftAnno
lftAnno
cl_plot(cl,
annotation=cl_annotation(top = topAnn,top.by = "Mir",top.height = 0.5,
bottom = botAnn,bottom.by = "Gene",bottom.height = 0.5,
right = rgtAnn,right.by ="Meth",right.width = 0.5,
left = lftAnno,left.by = "Drug" ,left.width = 0.5),
cross = list( mapping = aes(color = type,size=degree,shape=type),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)]),
shape = scale_shape_manual(values = 15:23),
size  = scale_size_continuous(range=c(1,5)))),
link  = list(mapping = aes(color = type,linetype=type,size=cor),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")[c(1:5,7:9)]),
linetype=scale_linetype_manual(values = c(1:4)),
size=scale_size(range = c(0.5,1.5)))),
header=NA,
label = list(color="black"
,angle=c(rep(0,8),rep(90,10),rep(0,10),rep(90,6))
,nudge_x=c(rep(-2,8),rep(0,10),rep(2,10),rep(0,6))
,nudge_y=c(rep(0,8),rep(-2,10),rep(0,10),rep(2,6))),
add   =  theme(panel.background = element_blank(),axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()))
cl_plot(cl,
annotation=cl_annotation(top = topAnn,top.by = "Mir",top.height = 0.5,
bottom = botAnn,bottom.by = "Gene",bottom.height = 0.5,
right = rgtAnn,right.by ="Meth",right.width = 0.5,
left = lftAnno,left.by = "Drug" ,left.width = 0.5),
cross = list( mapping = aes(color = type,size=degree,shape=type),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Dark2")[c(1:5,7:9)]),
shape = scale_shape_manual(values = 15:23),
size  = scale_size_continuous(range=c(1,5)))),
link  = list(mapping = aes(color = type,linetype=type,size=cor),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")[c(1:5,7:9)]),
linetype=scale_linetype_manual(values = c(1:4)),
size=scale_size(range = c(0.5,1.5)))),
header=NA,
label = list(color="black"
,angle=c(rep(0,8),rep(90,10),rep(0,10),rep(90,6))
,nudge_x=c(rep(-2,8),rep(0,10),rep(2,10),rep(0,6))
,nudge_y=c(rep(0,8),rep(-2,10),rep(0,10),rep(2,6))),
add   =  theme(panel.background = element_blank(),axis.title = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()))
rmarkdown::render("ReadMe.Rmd", output_format = "html_document", encoding="UTF-8")
rmarkdown::render("ReadMe.Rmd", output_format = "html_document", encoding="UTF-8")
library(crosslink)
#library(crosslink)
# generate demo data
n <- 6
demo <- gen_demo(n_cross = n,n_node = 4:(n+3), n_link = 3:(n+1), seed = 66)
nodes <- demo$nodes
edges <- demo$edges
cross.by <- demo$cross.by
# tf_rotate, rotating in a specific angle with (x,y) as the center.
cl %>% tf_rotate(x=0,y=1,angle = 45) %>% cl_plot()
# tf_shift, shifting a relative distance according to x-axis or y-axis
cl %>% tf_shift(x=1,y=-1) %>% cl_plot()
# tf_shear
cl %>% tf_shear(axis = "x",angle = 60) %>% cl_plot()
# tf_flip, flip the figure according to x-axis or y-axis
cl %>% tf_flip(axis = "y") %>% cl_plot()
# tf_scale
cl %>% tf_scale(x=0,y=1,scale = 5) %>% cl_plot()
# tf_fun, coordinate transformation according to custom-defined function
cl %>% tf_fun(fun = sin,along = "y",xrange.from=c(0,0.5*pi)) %>% cl_plot()
# combined tf functions
cl %>% tf_flip(axis = "y") %>% tf_fun(fun = sin,along = "y",xrange.from=c(0,0.5*pi)) %>% cl_plot()
devtools::install_github("zzwch/crosslinks")
library(crosslink)
cl <- crosslink(demo$nodes, demo$edges, demo$cross.by, odd.rm = F,spaces = "flank")
cl %>% cl_plot()
#library(crosslink)
# generate demo data
n <- 6
demo <- gen_demo(n_cross = n,n_node = 4:(n+3), n_link = 3:(n+1), seed = 66)
nodes <- demo$nodes
edges <- demo$edges
cross.by <- demo$cross.by
# users can define 'odd.rm' to choose if remove the nodes have zero relationship with any other nodes when generate crosslink class
# user can set intervals between nodes and gaps through spaces and gaps.
cl <- crosslink(nodes, edges, cross.by, odd.rm = F,spaces = "flank")
cl %>% get_cross()   # get node information
cl %>% get_link()    # get edges information
cl %>% cl_layouts()  # get layouts information of crosslink object
cl %>% cl_active()   # get active layouts information of crosslink object
# tf_rotate, rotating in a specific angle with (x,y) as the center.
cl %>% tf_rotate(x=0,y=1,angle = 45) %>% cl_plot()
# tf_shift, shifting a relative distance according to x-axis or y-axis
cl %>% tf_shift(x=1,y=-1) %>% cl_plot()
# tf_shear
cl %>% tf_shear(axis = "x",angle = 60) %>% cl_plot()
# tf_flip, flip the figure according to x-axis or y-axis
cl %>% tf_flip(axis = "y") %>% cl_plot()
# tf_scale
cl %>% tf_scale(x=0,y=1,scale = 5) %>% cl_plot()
# tf_fun, coordinate transformation according to custom-defined function
cl %>% tf_fun(fun = sin,along = "y",xrange.from=c(0,0.5*pi)) %>% cl_plot()
# combined tf functions
cl %>% tf_flip(axis = "y") %>% tf_fun(fun = sin,along = "y",xrange.from=c(0,0.5*pi)) %>% cl_plot()
# default layout module is column
cl %>% cl_plot()
cl %>% layout_column() %>% cl_plot()
# layout by row
cl %>% layout_row() %>% cl_plot()
# layout by arc
cl %>% layout_arc(angles = 60,crosses = c("E","F")) %>% cl_plot()
# layout by polygon (list of angles must have the same length with crosses)
cl %>% layout_polygon() %>% cl_plot()
# layout by hive
cl %>% layout_hive() %>% cl_plot()
# Header can be customized through 'set_header'
set_header(cl,header = c("A","B","C","D","E","F")) -> cl
cl %>% get_header()  # get header of crosslink object
cl %>% cl_plot()
# aesthetic settings based on ggplot2 system, some specific examples are shown below.
# set colors, shapes and size of nodes
# cross:a named list of arguments for crosses. usage same as ggplot2::geom_point(). Set NULL to use default settings, or Set NA to not show.
cl %>% cl_plot(cross = list(mapping =  aes(color = type,shape= type,size=type),
scale   = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")),
size  = scale_size_manual(values = seq(1,12,by=2)),
shape  = scale_shape_manual(values = c(15:22))
)
))
# set colors, linetypes and size of edges
# link: a named list of arguments for links. usage same as ggplot2::geom_segment(). Set NULL to use default settings, or Set NA to not show.
cl %>% cl_plot( link = list(mapping =  aes(color = src.cross,linetype =src.cross),
scale   = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Set1")),
linetype =scale_linetype_manual(values = c(1:6))),
size    = 1.5
))
# set header styles
# header:	a named list of arguments for headers. usage same as ggplot2::geom_text(). Set NULL to use default settings, or Set NA to not show.
cl %>% cl_plot(header = list(mapping = aes(color= cross),
scale = list(color = scale_color_manual(values = RColorBrewer::brewer.pal(8, "Dark2"))),
size = 5
))
# set figure theme
# add:	other gg object to be added to final plot, such as theme().
theme_use <- theme(legend.position = "none",aspect.ratio = 1,
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank())
cl %>% cl_plot(add=theme_use)
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:10)),levels=paste0("F",c(10:1))),value=c(10:1))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
rgtAnn
cl %>% cl_plot()
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="F"))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:10)),levels=paste0("F",c(10:1))),value=sample(10,c(1:10)))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="F"))
# cl_annotation： add annotation figure.
# top, bottom, left or  right	: ggplot object
# top.by, bottom.by, left.by, right.by : name of cross by which to align ggplot
ann.data <- data.frame(F=factor(paste0("F",c(1:10)),levels=paste0("F",c(10:1))),value=sample(size = 10,x=c(1:10)))
ann.data %>% ggplot(mapping = aes(x=F,y=value))+geom_bar(stat="identity")+coord_flip() -> rgtAnn
cl %>% cl_plot(annotation=cl_annotation(right= rgtAnn,right.by ="F"))
rmarkdown::render("ReadMe.Rmd", output_format = "html_document", encoding="UTF-8")
rmarkdown::render("ReadMe.Rmd", output_format = "pdf_document", encoding="UTF-8")
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
options(tinytex.verbose = TRUE)
options(tinytex.verbose = TRUE)
rmarkdown::render("ReadMe.Rmd", output_format = "pdf_document", encoding="UTF-8")
knit_with_parameters('G:/Project/R_packages/rpackages/update/0407/crosslink/ReadMe.Rmd', encoding = 'UTF-8')
rmarkdown::render("ReadMe.Rmd", output_format = "pdf_document", encoding="UTF-8")
knitr:::pandoc_to() == "latex"
tinytex::tlmgr_install("pdfcrop")
install.packages("texlive-msg-translations")
rmarkdown::render("ReadMe.Rmd", output_format = "pdf_document", encoding="UTF-8")
Sys.setenv(R_GSCMD="D:/installed_software/gs9.54.0/bin/gswin64.exe")
Sys.getenv("R_GSCMD")
rmarkdown::render("ReadMe.Rmd", output_format = "pdf_document", encoding="UTF-8")
rmarkdown::render("ReadMe.Rmd", output_format = "pdf_document", encoding="UTF-8")
library(processx)
install.packages("processx")
detach("package:processx", unload = TRUE)
install.packages("processx")
example
library(crosslink)
library(crosslink)
help.start()
help.start(crosslink)
vignette(package = "crosslink")
detach("package:crosslink", unload = TRUE)
remove.packages("crosslink")
devtools::install_github("zzwch/crosslinks")
library(crosslink)
devtools::install_github("zzwch/crosslinks",force = TRUE)
library(crosslink)
library(crosslinks)
vignette(package = "crosslink")
vignette(package = "crosslinks")
devtools::install_github("zzwch/crosslinks",force = TRUE)
library(crosslink)
devtools::install_github("zzwch/crosslink",force = TRUE)
library(crosslink)
library(crosslink)
library(crosslink)
vignette(package = "crosslink")
devtools::install_github("zzwch/crosslink",force = T)
library(crosslink)
vignette(package = "crosslink")
fs::dir_tree(find.package("crosslink"))
Sys.setenv(R_GSCMD="D:/installed_software/gs9.54.0/bin/gswin64.exe")
library(crosslink)
devtools::install_github("zzwch/crosslink")
library(crosslink)
vignette("crosslink")
vignette(package="crosslink")
devtools::install_github("zzwch/crosslink",force = T)
library(crosslink)
library(crosslink)
load("G:/Project/R_packages/rpackages/update/0407/crosslink/data/example.RData")
save(example,file = "G:/Project/R_packages/rpackages/update/0407/crosslink/data/example.RData")
save(example,file = "G:/Project/R_packages/rpackages/update/0407/crosslink/data/example.RData")
save(example,file = "G:/Project/R_packages/rpackages/update/0407/crosslink/data/example1.RData")
save(example,file = "G:/Project/R_packages/rpackages/update/0407/crosslink/data/example.rda")
devtools::install_github("zzwch/crosslink",force = T)
library(crosslink)
vignette(package="crosslink")
browseVignettes(package = "crosslink")
rmarkdown::render("vignette.Rmd", output_format = "html_document", encoding="UTF-8")
rmarkdown::render("G:/Project/R_packages/rpackages/update/0407/crosslink/vignettes/vignette.Rmd", output_format = "html_document", encoding="UTF-8")
library(crosslink)
pkgdown::build_site()
