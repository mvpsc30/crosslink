coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(1, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.1, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.02, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_path(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue") +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "purple", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "red", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dot", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
vignette("ggplot2-specs")
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "grey", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "grey", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.05, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.02, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "grey", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.03, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size =2) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "red", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size =2) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.03, "native"))) +
coord_fixed()
ggplot() +
geom_polygon(mapping = aes(x = us[,1], y = us[,2]), fill = "blue", alpha = 0.3) +
geom_point(mapping = aes(x = us[,1], y = us[,2]), color = "blue", size = 3) +
geom_polygon(mapping = aes(x = us_tf[,1], y = us_tf[,2]), fill = "red", alpha = 0.3) +
geom_point(mapping = aes(x = us_tf[,1], y = us_tf[,2]), color = "red", size = 3) +
geom_segment(mapping = aes(x = us[,1], y = us[,2], xend = us_tf[,1], yend = us_tf[,2]),
color = "black", linetype = "dotted", size = 1, arrow = arrow(type = "closed", length = unit(0.03, "native"))) +
coord_fixed()
library(crosslink)
vignette("rd-formatting")
library(crosslink)
library(Seurat)
anyDuplicated(1:10)
anyDuplicated(c(1:10,1))
Duplicated(c(1:10,1))
anyDuplicated(c(1:10,1,2))
duplicated(c(1:10,1,2))
any(duplicated(c(1:10,1,2)))
anyDuplicated(c(1:10,1,2))
anyDuplicated(NA)
anyDuplicated(NA,NA)
anyDuplicated(c(NA,NA))
purrr::list_along(c("A", "B"))
detach("package:crosslink", unload = TRUE)
library(crosslink)
show(cl)
library(crosslink)
detach("package:crosslink", unload = TRUE)
library(crosslink)
crosslink::nullna_default
library(forcats)
library(crosslink)
vignette("rd-formatting")
library(crosslink)
detach("package:crosslink", unload = TRUE)
library(crosslink)
letters
seq_len(3,5)
seq_len(c(3,5))
sapply(c(3,4), seq_len)
unlist(sapply(c(3,4), seq_len))
seq_along(1)
seq_along(12
seq_along(12)
seq_along(2)
random_crosslink <- function(n_cross = 2, n_link = c(10), n_node = c(3,4), seed = 6){
nodes <- data.frame(
key = paste0(rep(LETTERS[seq_len(n_cross)], n_node),
unlist(sapply(n_node, seq_len))),
type = rep(LETTERS[seq_len(n_cross)], n_node))
crosses <- tolist_by_group(nodes$key, nodes$type)
edges <- NULL
set.seed(seed)
for(i in seq_along(n_link)){
edges = data.frame(
src = sample(crosses[[i]], n_link[i]),
tar = sample(crosses[[i + 1]], n_link[i])
)
}
return(crosslink(nodes, edges, "type"))
}
cl <- random_crosslink()
library(crosslink)
cl <- random_crosslink()
library(crosslink)
cl <- random_crosslink()
transform_matrix_affine()
library(crosslink)
rm(random_crosslink())
rm(random_crosslink)
cl <- random_crosslink()
library(crosslink)
cl
library(crosslink)
cl
library(crosslink)
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
cl_void() %>%
print()
library(crosslink)
rm(list = ls())
n <- 7
demo <- gen_demo(n_cross = n, n_node = rep(n, n), n_link = rep(n, n-1), seed = 66)
nodes <- demo$nodes
edges <- demo$edges
cross.by <- demo$cross.by
object <- crosslink(nodes, edges, cross.by, odd.rm = F)
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
cl_void() %>%
print()
library(magrittr)
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
cl_void() %>%
print()
library(crosslink)
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
cl_void() %>%
print()
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
cl_void() %>%
print()
n <- 2
demo <- gen_demo(n_cross = n, n_node = rep(n, n), n_link = rep(n, n-1), seed = 66)
nodes <- demo$nodes
edges <- demo$edges
cross.by <- demo$cross.by
object <- crosslink(nodes, edges, cross.by, odd.rm = F)
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
cl_void() %>%
print()
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
cl_void() %>%
print()
cl_yrange(object)
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
#cl_void() %>%
print()
pheatmap::pheatmap(mat = matrix(1:9, 3))
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) -> p
pheatmap::pheatmap(mat = matrix(1:9, 3))
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
#layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) -> p1
pheatmap::pheatmap(mat = matrix(1:9, 3)) -> p2
patchwork::align_plots(p1, p2)
library(pheatmap)
library(patchwork)
?align_plots
p2
?pheatmap
patchwork::align_plots(p1, p2$gtable)
patchwork::align_plots(p1, p2$gtable$grobs)
n <- 4
demo <- gen_demo(n_cross = n, n_node = rep(n, n), n_link = rep(n, n-1), seed = 66)
nodes <- demo$nodes
edges <- demo$edges
cross.by <- demo$cross.by
object <- crosslink(nodes, edges, cross.by, odd.rm = F)
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) -> p1
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
layout_polygon() %>%
#layout_arc(angles = 180) %>%
#tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
#cl_void() %>%
print()
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
layout_polygon() %>%
#layout_arc(angles = 180) %>%
tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) %>%
#cl_void() %>%
print()
#########
object %>%
set_header() %>%
#layout_row() %>%
#layout_hive() %>%
layout_polygon() %>%
#layout_arc(angles = 180) %>%
tf_rotate(angle = 45, by.each.cross = F) %>%
cl_plot(cross = list(mapping = aes(color = type, shape = type),
scale = list(color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))',
shape = "scale_shape_manual(values = 1:7)")
),
#link = list(color = "gold", geom = "curve", curvature = 0.5),
label = list(mapping = aes(color = type),
scale = list(
color = 'scale_color_manual(values = RColorBrewer::brewer.pal(8, "Spectral"))'
))) -> p1
library(aplot)
p1 %>% insert_left(p1)
p1 %>% insert_left(p1) %>% insert_right(p1) %>% insert_top(p1) %>% insert_bottom(p1)
